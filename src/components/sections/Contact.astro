---
// Contact.astro
import SplitText from "../SplitText";
const formUrl = import.meta.env.VITE_FORM_URL;
---

<section
  id="contact"
  class="min-h-screen flex flex-col justify-center items-center relative px-4 sm:px-6 md:px-8 lg:px-12 xl:px-16 py-10 bg-primary-2"
>
  <div class="max-w-4xl w-full">
    <!-- Section Header -->
    <div class="mb-4 sm:mb-10 md:mb-8">
      <SplitText
        client:visible
        text="Get In Touch"
        className="text-5xl md:text-6xl lg:text-7xl font-bold mb-8"
        delay={100}
        duration={2}
        ease="elastic.out(1,0.3)"
        splitType="chars"
        from={{ opacity: 0, y: 40 }}
        to={{ opacity: 1, y: 0 }}
        threshold={0.1}
        rootMargin="-10px"
      />

      <!-- Decorative line -->
      <div class="w-20 sm:w-24 md:w-32 h-1 bg-gray-900 mt-2"></div>
    </div>

    <!-- Contact Content -->
    <div class="grid md:grid-cols-2 gap-8 md:gap-12 items-start">
      <!-- Contact Info -->
      <div class="space-y-8 md:space-y-10">
        <p class="text-base sm:text-lg text-gray-700 leading-relaxed">
          Have a project in mind or just want to chat? Feel free to reach out.
          I'll get back to you as soon as possible.
        </p>

        <div class="space-y-6">
          <!-- Email -->
          <div class="group">
            <h3
              class="text-xs sm:text-sm font-semibold text-gray-500 uppercase tracking-wider mb-2"
            >
              Email
            </h3>
            <a
              href="mailto:your.email@example.com"
              class="text-lg sm:text-xl text-gray-900 hover:text-blue-600 transition-colors duration-300 flex items-center gap-2 group"
            >
              <svg
                class="w-5 h-5 transition-transform group-hover:scale-110"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                ></path>
              </svg>
              <span class="break-all">your.email@example.com</span>
            </a>
          </div>

          <!-- Phone -->
          <div class="group">
            <h3
              class="text-xs sm:text-sm font-semibold text-gray-500 uppercase tracking-wider mb-2"
            >
              Phone
            </h3>
            <a
              href="tel:+1234567890"
              class="text-lg sm:text-xl text-gray-900 hover:text-blue-600 transition-colors duration-300 flex items-center gap-2 group"
            >
              <svg
                class="w-5 h-5 transition-transform group-hover:scale-110"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                ></path>
              </svg>
              <span>+1 (234) 567-890</span>
            </a>
          </div>

          <!-- Location -->
          <div class="group">
            <h3
              class="text-xs sm:text-sm font-semibold text-gray-500 uppercase tracking-wider mb-2"
            >
              Location
            </h3>
            <p class="text-lg sm:text-xl text-gray-900 flex items-center gap-2">
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                ></path>
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <span>Your City, Country</span>
            </p>
          </div>
        </div>

        <!-- Social Links -->
        <div>
          <h3
            class="text-xs sm:text-sm font-semibold text-gray-500 uppercase tracking-wider mb-4"
          >
            Connect
          </h3>
          <div class="flex gap-3 sm:gap-4">
            <a
              href="https://github.com/yourusername"
              target="_blank"
              rel="noopener noreferrer"
              class="w-11 h-11 sm:w-12 sm:h-12 flex items-center justify-center rounded-lg bg-white border border-gray-200 text-gray-700 hover:bg-gray-900 hover:text-white hover:border-gray-900 transition-all duration-300 hover:-translate-y-1"
              aria-label="GitHub"
            >
              <svg
                class="w-5 h-5 sm:w-6 sm:h-6"
                fill="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
                ></path>
              </svg>
            </a>
            <a
              href="https://linkedin.com/in/yourusername"
              target="_blank"
              rel="noopener noreferrer"
              class="w-11 h-11 sm:w-12 sm:h-12 flex items-center justify-center rounded-lg bg-white border border-gray-200 text-gray-700 hover:bg-blue-600 hover:text-white hover:border-blue-600 transition-all duration-300 hover:-translate-y-1"
              aria-label="LinkedIn"
            >
              <svg
                class="w-5 h-5 sm:w-6 sm:h-6"
                fill="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
                ></path>
              </svg>
            </a>
          </div>
        </div>
      </div>

      <div
        id="toast"
        class="fixed top-5 right-5 bg-green-500 text-white px-4 py-2 rounded shadow-lg opacity-0 transition-opacity duration-300"
      >
      </div>

      <!-- Contact Form -->
      <form
        id="contactForm"
        data-url={formUrl}
        class="space-y-5 sm:space-y-6 bg-white p-6 sm:p-8 rounded-2xl shadow-sm border border-gray-100"
      >
        <div>
          <label
            for="name"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            Name
          </label>
          <input
            type="text"
            id="name"
            name="name"
            required
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all duration-300 outline-none bg-white"
            placeholder="Your name"
          />
        </div>

        <div>
          <label
            for="email"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            Email
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all duration-300 outline-none bg-white"
            placeholder="your.email@example.com"
          />
        </div>

        <div>
          <label
            for="message"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            Message
          </label>
          <textarea
            id="message"
            name="message"
            rows="5"
            required
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gray-900 focus:border-transparent transition-all duration-300 outline-none resize-none bg-white"
            placeholder="Tell me about your project..."></textarea>
        </div>

        <button
          type="submit"
          class="w-full bg-gray-900 text-white font-medium py-3.5 sm:py-4 px-6 rounded-lg hover:bg-gray-800 transform hover:scale-[1.02] transition-all duration-300 shadow-md hover:shadow-lg"
        >
          Send Message
        </button>
      </form>
    </div>
  </div>
</section>

<style>
  /* Smooth focus transitions */
  input:focus,
  textarea:focus {
    transform: translateY(-2px);
  }
</style>

<script type="module">
  const form = document.getElementById("contactForm");
  const toast = document.getElementById("toast");
  const formUrl = form.dataset.url;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    try {
      const res = await fetch(formUrl, { method: "POST", body: formData });
      if (res.ok) {
        showToast("Message sent successfully!");
        form.reset();
      } else {
        showToast("Failed to send message.", true);
        console.log(await res.text()); 
      }
    } catch (err) {
      console.error(err);
      showToast("An error occurred.", true);
    }
  });

  function showToast(message, isError = false) {
    toast.textContent = message;
    toast.className = `fixed top-5 right-5 px-4 py-2 rounded shadow-lg transition-opacity duration-300 ${
      isError ? "bg-red-500 text-white" : "bg-green-500 text-white"
    }`;
    toast.style.opacity = 1;
    setTimeout(() => {
      toast.style.opacity = 0;
    }, 3000);
  }
</script>
